/*
 * Copyright (c) 2017, Aarón Durán Sánchez,Javier López de Lerma, Mateo García Fuentes, Carlos López Martínez 
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package pokertrainer.view;

import java.awt.Color;

/**
 * Método que define un panel para mostrar la última apuesta de cada jugador.
 * @author Javi
 */
public class PlayerBet extends javax.swing.JPanel {

    /**
     * Crea un nuevo panel de apuesta con el foreground de color verde.
     */
    public PlayerBet() {
        initComponents();
        playerBet.setForeground(Color.GREEN);
    }
    
    /**
     * Establece la última apuesta realizada.
     * @param bet Cuantía de la última apuesta.
     */
    public void setBet(int bet) {
        if (bet != 0) playerBet.setText("" + bet);
        else playerBet.setText("");
        playerBet.setForeground(Color.GREEN);
    }
    
    /**
     * Método que cambia el color a gris cuando un jugador hace Fold.
     */
    public void setFoldBet(){
        playerBet.setForeground(Color.GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerBet = new javax.swing.JLabel();

        setAutoscrolls(true);
        setOpaque(false);

        playerBet.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        playerBet.setForeground(new java.awt.Color(0, 255, 0));
        playerBet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerBet.setText("1K");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerBet, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(playerBet, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel playerBet;
    // End of variables declaration//GEN-END:variables

    /**
     * Método que oculta el panel de apuesta.
     */
    void disablePanel() {
        this.playerBet.setVisible(false);
        this.setVisible(false);
    }
    /**
     * Método que repinta todos los componentes
     */
    void repaintAll() {
        this.playerBet.repaint();
        playerBet.setForeground(Color.GREEN);
    }
}
