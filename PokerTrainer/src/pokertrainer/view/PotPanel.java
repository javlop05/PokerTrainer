/*
 * Copyright (c) 2017, Aarón Durán Sánchez,Javier López de Lerma, Mateo García Fuentes, Carlos López Martínez 
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package pokertrainer.view;

/**
 * Clase de la vista que define el panel donde se muestra la cantidad de fichas del bote de la mesa.
 * @author Javi
 */
public class PotPanel extends javax.swing.JPanel {

    /**
     * Constructor de la clase que crea un nuevo panel para el bote.
     */
    public PotPanel() {
        initComponents();
    }
    /**
     * Modifica el texto del panel que muestra la cantidad de fichas que hay en el bote.
     * @param moneyPot Cantidad de fichas en el bote.
     */
    void setPot(int moneyPot) {
        potQuantity.setText(String.valueOf(moneyPot));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        potQuantity = new javax.swing.JLabel();
        potImage = new javax.swing.JLabel();

        setAutoscrolls(true);
        setOpaque(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        potQuantity.setBackground(new java.awt.Color(0, 0, 0));
        potQuantity.setForeground(new java.awt.Color(255, 255, 255));
        potQuantity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        potQuantity.setText("0");
        potQuantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        potQuantity.setOpaque(true);
        add(potQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 119, 20));

        potImage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        potImage.setForeground(new java.awt.Color(240, 240, 240));
        potImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        potImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokertrainer/view/img/potImage.png"))); // NOI18N
        add(potImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 119, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel potImage;
    private javax.swing.JLabel potQuantity;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Método que repinta todos los componentes
     */
    void repaintAll() {
        this.potImage.repaint();
        this.potQuantity.repaint();
    }

   
}
